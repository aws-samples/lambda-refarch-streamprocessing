AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: "Template to set up Kinesis stream, Lambda functions, S3 bucket, DynamoDB table and related IAM roles for AWS Lambda Real-time Stream Processing Reference Architecture."

# Parameters: 
#   LambdaS3Bucket: 
#     Type: String
#     Default: awslambda-reference-architectures
#     Description: Name of S3 bucket where Lambda function packages are stored.
#   LambdaEventStreamConsumerS3Key:
#     Type : String
#     Default : stream-processing/ddb_eventprocessor.zip
#     Description : Name of S3 key for Zip with Stream Processing DynamoDB Event Processor Lambda function package.
#   LambdaEventStreamConsumerHandler:
#     Type : String
#     Default : ddb_eventprocessor.handler
#     Description : Name of handler for Stream Processing DynamoDB Event Processor Lambda function.

Resources:

  #########################################################################################################
  # Event Stream Stack
  #   - Creates the Amazon Kinesis Stream resources
  #########################################################################################################
  EventStreamStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./template-stream.yaml
  
  #########################################################################################################
  # Event Stream Producer Stack
  #   - Creates a Lambda function which polls Twitter for new tweets and adds them to
  #     the Amazon Kinesis stream.
  #########################################################################################################
  EventStreamProducerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Prefix: !Ref AWS::StackName
        EventStreamName: !GetAtt EventStreamStack.Outputs.StreamName
        EventStreamArn: !GetAtt EventStreamStack.Outputs.StreamArn
      # TemplateURL: ./template-producer-python.yaml
      TemplateURL: ./.aws-sam/build/template.yaml

  #########################################################################################################
  # Event Data Table Stack
  #   - Creates a DyanmoDB table where the streaming data will be persisted.
  #   - The table will use On-Demand pricing and have TTL enabled.
  #   - The TTL variable will prevent unexpected storage costs by removing stale items after 1 day
  #     (per EventStreamConsumer Lambda configuraiton)
  #########################################################################################################
  EventDataTableStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Prefix: !Ref AWS::StackName
      TemplateURL: ./template-datastore.yaml

  #########################################################################################################
  # Event Stream Consumer Stack
  #   - Creates a Lambda function which reads from the Kinesis Stream in batches of 25 items and persists
  #     the stream records into DynamoDB.
  #########################################################################################################
  EventStreamConsumerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Prefix: !Ref AWS::StackName
        EventDataTableName: !GetAtt EventDataTableStack.Outputs.TableName
        EventDataTableArn: !GetAtt EventDataTableStack.Outputs.TableArn
        EventStreamArn: !GetAtt EventStreamStack.Outputs.StreamArn
      TemplateURL: ./template-consumer.yaml

Outputs:
  Region:
    Value: !Ref AWS::Region
  EventStreamName:
    Value: !GetAtt EventStreamStack.Outputs.StreamName
  EventStreamArn:
    Value: !GetAtt EventStreamStack.Outputs.StreamArn
  EventDataTableName:
    Value: !GetAtt EventDataTableStack.Outputs.TableName
  EventDataTableArn:
    Value: !GetAtt EventDataTableStack.Outputs.TableArn
